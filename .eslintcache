[{"/home/paramjeet/Desktop/project/src/App.js":"1","/home/paramjeet/Desktop/project/src/index.js":"2","/home/paramjeet/Desktop/project/src/components/Landing/index.jsx":"3","/home/paramjeet/Desktop/project/src/components/Login/store/reducers/index.js":"4","/home/paramjeet/Desktop/project/src/components/Login/store/actions/index.js":"5","/home/paramjeet/Desktop/project/src/store/combineReducers.js":"6","/home/paramjeet/Desktop/project/src/store/index.js":"7","/home/paramjeet/Desktop/project/src/components/Login/index.jsx":"8","/home/paramjeet/Desktop/project/src/api/apiUtils.js":"9","/home/paramjeet/Desktop/project/src/api/apiConfig.js":"10","/home/paramjeet/Desktop/project/src/components/Dashboard/store/actions/index.js":"11","/home/paramjeet/Desktop/project/src/components/Landing/store/actions/index.js":"12","/home/paramjeet/Desktop/project/src/components/Dashboard/index.js":"13"},{"size":659,"mtime":1607170486064,"results":"14","hashOfConfig":"15"},{"size":326,"mtime":1607160481979,"results":"16","hashOfConfig":"15"},{"size":4341,"mtime":1607173781798,"results":"17","hashOfConfig":"15"},{"size":1143,"mtime":1607173568636,"results":"18","hashOfConfig":"15"},{"size":872,"mtime":1607169046660,"results":"19","hashOfConfig":"15"},{"size":300,"mtime":1607168159147,"results":"20","hashOfConfig":"15"},{"size":1060,"mtime":1607168363452,"results":"21","hashOfConfig":"15"},{"size":3658,"mtime":1607169295934,"results":"22","hashOfConfig":"15"},{"size":1625,"mtime":1607162397998,"results":"23","hashOfConfig":"15"},{"size":160,"mtime":1607164206018,"results":"24","hashOfConfig":"15"},{"size":176,"mtime":1607168256740,"results":"25","hashOfConfig":"15"},{"size":824,"mtime":1607171847421,"results":"26","hashOfConfig":"15"},{"size":2743,"mtime":1607169482819,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"11zorw1",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/home/paramjeet/Desktop/project/src/App.js",[],["57","58"],"/home/paramjeet/Desktop/project/src/index.js",[],["59","60"],"/home/paramjeet/Desktop/project/src/components/Landing/index.jsx",[],"/home/paramjeet/Desktop/project/src/components/Login/store/reducers/index.js",[],"/home/paramjeet/Desktop/project/src/components/Login/store/actions/index.js",[],"/home/paramjeet/Desktop/project/src/store/combineReducers.js",[],"/home/paramjeet/Desktop/project/src/store/index.js",[],"/home/paramjeet/Desktop/project/src/components/Login/index.jsx",["61"],"import React,{useCallback, useState, useEffect} from 'react';\nimport {\n    Avatar,\n    Button,\n    CssBaseline,\n    Typography,\n    Container\n} from '@material-ui/core';\nimport {\n    LockOutlined\n} from '@material-ui/icons';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport * as LoginAction from './store/actions'\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst Login = React.memo(({login,history,user}) => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const classes = useStyles();\n\n    // submitting the login form\n    const submitLoginForm = useCallback(\n        (event) => {\n            event.preventDefault()\n              login({ email, password })\n        },\n        [email, password],\n    )\n\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    useEffect(() => {\n        if (user) {\n             history.push('/dashboard')\n        }\n    }, [user, history])\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlined />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Log in\n        </Typography>\n                <ValidatorForm className={classes.form} onSubmit={submitLoginForm}>\n                    <TextValidator\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        value={email}\n                        onChange={(e)=>setEmail(e.target.value)}\n                        validators={['required','isEmail']}\n                        errorMessages={['This field is required', 'Invalid Email ']}\n                    />\n                    <TextValidator\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        validators={['required']}\n                        errorMessages={['This field is required']}\n                    />\n                   \n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        LOGIN\n          </Button>\n                    \n                </ValidatorForm>\n            </div>\n        </Container>\n    );\n})\n\nconst mapStateToProps = ({ loginReducer }) => {\n    return {\n        user: loginReducer.user\n    }\n}\n\nexport default connect(mapStateToProps, { ...LoginAction })(Login)","/home/paramjeet/Desktop/project/src/api/apiUtils.js",[],"/home/paramjeet/Desktop/project/src/api/apiConfig.js",[],"/home/paramjeet/Desktop/project/src/components/Dashboard/store/actions/index.js",[],"/home/paramjeet/Desktop/project/src/components/Landing/store/actions/index.js",[],"/home/paramjeet/Desktop/project/src/components/Dashboard/index.js",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"62","replacedBy":"66"},{"ruleId":"64","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":49,"column":9,"nodeType":"70","endLine":49,"endColumn":26,"suggestions":"71"},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],["72"],["73"],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'login'. Either include it or remove the dependency array. If 'login' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["74"],"no-global-assign","no-unsafe-negation",{"desc":"75","fix":"76"},"Update the dependencies array to be: [email, login, password]",{"range":"77","text":"78"},[1283,1300],"[email, login, password]"]